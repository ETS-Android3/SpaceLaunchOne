/**
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.
 *
 * OpenAPI spec version: v2.0.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package apimodels;

import com.google.gson.annotations.SerializedName;

import java.util.Date;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

@ApiModel(description = "")
public class DockingEventSerializerForSpacecraftFlight {
  
  @SerializedName("spacestation")
  private SpaceStationSerializerForCommon spacestation = null;
  @SerializedName("docking")
  private Date docking = null;
  @SerializedName("departure")
  private Date departure = null;
  @SerializedName("docking_location")
  private DockingLocation dockingLocation = null;

  /**
   **/
  @ApiModelProperty(value = "")
  public SpaceStationSerializerForCommon getSpacestation() {
    return spacestation;
  }
  public void setSpacestation(SpaceStationSerializerForCommon spacestation) {
    this.spacestation = spacestation;
  }

  /**
   **/
  @ApiModelProperty(required = true, value = "")
  public Date getDocking() {
    return docking;
  }
  public void setDocking(Date docking) {
    this.docking = docking;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public Date getDeparture() {
    return departure;
  }
  public void setDeparture(Date departure) {
    this.departure = departure;
  }

  /**
   **/
  @ApiModelProperty(value = "")
  public DockingLocation getDockingLocation() {
    return dockingLocation;
  }
  public void setDockingLocation(DockingLocation dockingLocation) {
    this.dockingLocation = dockingLocation;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DockingEventSerializerForSpacecraftFlight dockingEventSerializerForSpacecraftFlight = (DockingEventSerializerForSpacecraftFlight) o;
    return (this.spacestation == null ? dockingEventSerializerForSpacecraftFlight.spacestation == null : this.spacestation.equals(dockingEventSerializerForSpacecraftFlight.spacestation)) &&
        (this.docking == null ? dockingEventSerializerForSpacecraftFlight.docking == null : this.docking.equals(dockingEventSerializerForSpacecraftFlight.docking)) &&
        (this.departure == null ? dockingEventSerializerForSpacecraftFlight.departure == null : this.departure.equals(dockingEventSerializerForSpacecraftFlight.departure)) &&
        (this.dockingLocation == null ? dockingEventSerializerForSpacecraftFlight.dockingLocation == null : this.dockingLocation.equals(dockingEventSerializerForSpacecraftFlight.dockingLocation));
  }

  @Override
  public int hashCode() {
    int result = 17;
    result = 31 * result + (this.spacestation == null ? 0: this.spacestation.hashCode());
    result = 31 * result + (this.docking == null ? 0: this.docking.hashCode());
    result = 31 * result + (this.departure == null ? 0: this.departure.hashCode());
    result = 31 * result + (this.dockingLocation == null ? 0: this.dockingLocation.hashCode());
    return result;
  }

  @Override
  public String toString()  {
    StringBuilder sb = new StringBuilder();
    sb.append("class DockingEventSerializerForSpacecraftFlight {\n");
    
    sb.append("  spacestation: ").append(spacestation).append("\n");
    sb.append("  docking: ").append(docking).append("\n");
    sb.append("  departure: ").append(departure).append("\n");
    sb.append("  dockingLocation: ").append(dockingLocation).append("\n");
    sb.append("}\n");
    return sb.toString();
  }
}
