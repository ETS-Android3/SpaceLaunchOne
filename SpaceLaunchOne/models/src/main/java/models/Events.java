/*
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package models;

import com.google.gson.annotations.SerializedName;

import org.threeten.bp.OffsetDateTime;

import java.util.ArrayList;
import java.util.List;
import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * Events
 */

public class Events {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("updates")
  private List<Update> updates = null;

  @SerializedName("type")
  private EventType type = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("webcast_live")
  private Boolean webcastLive = null;

  @SerializedName("location")
  private String location = null;

  @SerializedName("news_url")
  private String newsUrl = null;

  @SerializedName("video_url")
  private String videoUrl = null;

  @SerializedName("feature_image")
  private String featureImage = null;

  @SerializedName("date")
  private OffsetDateTime date = null;

  @SerializedName("launches")
  private List<LaunchSerializerCommon> launches = new ArrayList<LaunchSerializerCommon>();

  @SerializedName("expeditions")
  private List<Expedition> expeditions = new ArrayList<Expedition>();

  @SerializedName("spacestations")
  private List<SpaceStationSerializerForCommon> spacestations = new ArrayList<SpaceStationSerializerForCommon>();

  @SerializedName("program")
  private List<Program> program = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public Events slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public Events name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

   /**
   * Get updates
   * @return updates
  **/
  @ApiModelProperty(value = "")
  public List<Update> getUpdates() {
    return updates;
  }

  public Events type(EventType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public EventType getType() {
    return type;
  }

  public void setType(EventType type) {
    this.type = type;
  }

  public Events description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public Events webcastLive(Boolean webcastLive) {
    this.webcastLive = webcastLive;
    return this;
  }

   /**
   * Get webcastLive
   * @return webcastLive
  **/
  @ApiModelProperty(value = "")
  public Boolean isWebcastLive() {
    return webcastLive;
  }

  public void setWebcastLive(Boolean webcastLive) {
    this.webcastLive = webcastLive;
  }

  public Events location(String location) {
    this.location = location;
    return this;
  }

   /**
   * Get location
   * @return location
  **/
  @ApiModelProperty(value = "")
  public String getLocation() {
    return location;
  }

  public void setLocation(String location) {
    this.location = location;
  }

  public Events newsUrl(String newsUrl) {
    this.newsUrl = newsUrl;
    return this;
  }

   /**
   * Get newsUrl
   * @return newsUrl
  **/
  @ApiModelProperty(value = "")
  public String getNewsUrl() {
    return newsUrl;
  }

  public void setNewsUrl(String newsUrl) {
    this.newsUrl = newsUrl;
  }

  public Events videoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
    return this;
  }

   /**
   * Get videoUrl
   * @return videoUrl
  **/
  @ApiModelProperty(value = "")
  public String getVideoUrl() {
    return videoUrl;
  }

  public void setVideoUrl(String videoUrl) {
    this.videoUrl = videoUrl;
  }

   /**
   * Get featureImage
   * @return featureImage
  **/
  @ApiModelProperty(value = "")
  public String getFeatureImage() {
    return featureImage;
  }

  public Events date(OffsetDateTime date) {
    this.date = date;
    return this;
  }

   /**
   * Get date
   * @return date
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDate() {
    return date;
  }

  public void setDate(OffsetDateTime date) {
    this.date = date;
  }

  public Events launches(List<LaunchSerializerCommon> launches) {
    this.launches = launches;
    return this;
  }

  public Events addLaunchesItem(LaunchSerializerCommon launchesItem) {
    this.launches.add(launchesItem);
    return this;
  }

   /**
   * Get launches
   * @return launches
  **/
  @ApiModelProperty(required = true, value = "")
  public List<LaunchSerializerCommon> getLaunches() {
    return launches;
  }

  public void setLaunches(List<LaunchSerializerCommon> launches) {
    this.launches = launches;
  }

  public Events expeditions(List<Expedition> expeditions) {
    this.expeditions = expeditions;
    return this;
  }

  public Events addExpeditionsItem(Expedition expeditionsItem) {
    this.expeditions.add(expeditionsItem);
    return this;
  }

   /**
   * Get expeditions
   * @return expeditions
  **/
  @ApiModelProperty(required = true, value = "")
  public List<Expedition> getExpeditions() {
    return expeditions;
  }

  public void setExpeditions(List<Expedition> expeditions) {
    this.expeditions = expeditions;
  }

  public Events spacestations(List<SpaceStationSerializerForCommon> spacestations) {
    this.spacestations = spacestations;
    return this;
  }

  public Events addSpacestationsItem(SpaceStationSerializerForCommon spacestationsItem) {
    this.spacestations.add(spacestationsItem);
    return this;
  }

   /**
   * Get spacestations
   * @return spacestations
  **/
  @ApiModelProperty(required = true, value = "")
  public List<SpaceStationSerializerForCommon> getSpacestations() {
    return spacestations;
  }

  public void setSpacestations(List<SpaceStationSerializerForCommon> spacestations) {
    this.spacestations = spacestations;
  }

   /**
   * Get program
   * @return program
  **/
  @ApiModelProperty(value = "")
  public List<Program> getProgram() {
    return program;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Events events = (Events) o;
    return Objects.equals(this.id, events.id) &&
        Objects.equals(this.url, events.url) &&
        Objects.equals(this.slug, events.slug) &&
        Objects.equals(this.name, events.name) &&
        Objects.equals(this.updates, events.updates) &&
        Objects.equals(this.type, events.type) &&
        Objects.equals(this.description, events.description) &&
        Objects.equals(this.webcastLive, events.webcastLive) &&
        Objects.equals(this.location, events.location) &&
        Objects.equals(this.newsUrl, events.newsUrl) &&
        Objects.equals(this.videoUrl, events.videoUrl) &&
        Objects.equals(this.featureImage, events.featureImage) &&
        Objects.equals(this.date, events.date) &&
        Objects.equals(this.launches, events.launches) &&
        Objects.equals(this.expeditions, events.expeditions) &&
        Objects.equals(this.spacestations, events.spacestations) &&
        Objects.equals(this.program, events.program);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, slug, name, updates, type, description, webcastLive, location, newsUrl, videoUrl, featureImage, date, launches, expeditions, spacestations, program);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Events {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    updates: ").append(toIndentedString(updates)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    webcastLive: ").append(toIndentedString(webcastLive)).append("\n");
    sb.append("    location: ").append(toIndentedString(location)).append("\n");
    sb.append("    newsUrl: ").append(toIndentedString(newsUrl)).append("\n");
    sb.append("    videoUrl: ").append(toIndentedString(videoUrl)).append("\n");
    sb.append("    featureImage: ").append(toIndentedString(featureImage)).append("\n");
    sb.append("    date: ").append(toIndentedString(date)).append("\n");
    sb.append("    launches: ").append(toIndentedString(launches)).append("\n");
    sb.append("    expeditions: ").append(toIndentedString(expeditions)).append("\n");
    sb.append("    spacestations: ").append(toIndentedString(spacestations)).append("\n");
    sb.append("    program: ").append(toIndentedString(program)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

