/*
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package models;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * DockingLocationSerializerForSpacestation
 */

public class DockingLocationSerializerForSpacestation {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("docked")
  private DockingEventDetailedSerializerForSpacestation docked = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public DockingLocationSerializerForSpacestation name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public DockingLocationSerializerForSpacestation docked(DockingEventDetailedSerializerForSpacestation docked) {
    this.docked = docked;
    return this;
  }

   /**
   * Get docked
   * @return docked
  **/
  @ApiModelProperty(value = "")
  public DockingEventDetailedSerializerForSpacestation getDocked() {
    return docked;
  }

  public void setDocked(DockingEventDetailedSerializerForSpacestation docked) {
    this.docked = docked;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    DockingLocationSerializerForSpacestation dockingLocationSerializerForSpacestation = (DockingLocationSerializerForSpacestation) o;
    return Objects.equals(this.id, dockingLocationSerializerForSpacestation.id) &&
        Objects.equals(this.name, dockingLocationSerializerForSpacestation.name) &&
        Objects.equals(this.docked, dockingLocationSerializerForSpacestation.docked);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, docked);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class DockingLocationSerializerForSpacestation {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    docked: ").append(toIndentedString(docked)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

