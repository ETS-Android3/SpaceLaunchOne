/*
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package models;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * SpaceStationSerializerForExpedition
 */

public class SpaceStationSerializerForExpedition {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private SpaceStationStatus status = null;

  @SerializedName("orbit")
  private String orbit = null;

  @SerializedName("image_url")
  private String imageUrl = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public SpaceStationSerializerForExpedition name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SpaceStationSerializerForExpedition status(SpaceStationStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public SpaceStationStatus getStatus() {
    return status;
  }

  public void setStatus(SpaceStationStatus status) {
    this.status = status;
  }

   /**
   * Get orbit
   * @return orbit
  **/
  @ApiModelProperty(value = "")
  public String getOrbit() {
    return orbit;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @ApiModelProperty(value = "")
  public String getImageUrl() {
    return imageUrl;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SpaceStationSerializerForExpedition spaceStationSerializerForExpedition = (SpaceStationSerializerForExpedition) o;
    return Objects.equals(this.id, spaceStationSerializerForExpedition.id) &&
        Objects.equals(this.url, spaceStationSerializerForExpedition.url) &&
        Objects.equals(this.name, spaceStationSerializerForExpedition.name) &&
        Objects.equals(this.status, spaceStationSerializerForExpedition.status) &&
        Objects.equals(this.orbit, spaceStationSerializerForExpedition.orbit) &&
        Objects.equals(this.imageUrl, spaceStationSerializerForExpedition.imageUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, name, status, orbit, imageUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SpaceStationSerializerForExpedition {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    orbit: ").append(toIndentedString(orbit)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

