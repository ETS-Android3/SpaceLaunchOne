/*
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package models;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * Launcher
 */

public class Launcher {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("flight_proven")
  private Boolean flightProven = null;

  @SerializedName("serial_number")
  private String serialNumber = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("details")
  private String details = null;

  @SerializedName("launcher_config")
  private LauncherConfigList launcherConfig = null;

  @SerializedName("image_url")
  private String imageUrl = null;

  @SerializedName("flights")
  private String flights = null;

  @SerializedName("last_launch_date")
  private String lastLaunchDate = null;

  @SerializedName("first_launch_date")
  private String firstLaunchDate = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public Launcher flightProven(Boolean flightProven) {
    this.flightProven = flightProven;
    return this;
  }

   /**
   * Get flightProven
   * @return flightProven
  **/
  @ApiModelProperty(value = "")
  public Boolean isFlightProven() {
    return flightProven;
  }

  public void setFlightProven(Boolean flightProven) {
    this.flightProven = flightProven;
  }

  public Launcher serialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
    return this;
  }

   /**
   * Get serialNumber
   * @return serialNumber
  **/
  @ApiModelProperty(value = "")
  public String getSerialNumber() {
    return serialNumber;
  }

  public void setSerialNumber(String serialNumber) {
    this.serialNumber = serialNumber;
  }

  public Launcher status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Launcher details(String details) {
    this.details = details;
    return this;
  }

   /**
   * Get details
   * @return details
  **/
  @ApiModelProperty(value = "")
  public String getDetails() {
    return details;
  }

  public void setDetails(String details) {
    this.details = details;
  }

  public Launcher launcherConfig(LauncherConfigList launcherConfig) {
    this.launcherConfig = launcherConfig;
    return this;
  }

   /**
   * Get launcherConfig
   * @return launcherConfig
  **/
  @ApiModelProperty(value = "")
  public LauncherConfigList getLauncherConfig() {
    return launcherConfig;
  }

  public void setLauncherConfig(LauncherConfigList launcherConfig) {
    this.launcherConfig = launcherConfig;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @ApiModelProperty(value = "")
  public String getImageUrl() {
    return imageUrl;
  }

   /**
   * Get flights
   * @return flights
  **/
  @ApiModelProperty(value = "")
  public String getFlights() {
    return flights;
  }

   /**
   * Get lastLaunchDate
   * @return lastLaunchDate
  **/
  @ApiModelProperty(value = "")
  public String getLastLaunchDate() {
    return lastLaunchDate;
  }

   /**
   * Get firstLaunchDate
   * @return firstLaunchDate
  **/
  @ApiModelProperty(value = "")
  public String getFirstLaunchDate() {
    return firstLaunchDate;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Launcher launcher = (Launcher) o;
    return Objects.equals(this.id, launcher.id) &&
        Objects.equals(this.url, launcher.url) &&
        Objects.equals(this.flightProven, launcher.flightProven) &&
        Objects.equals(this.serialNumber, launcher.serialNumber) &&
        Objects.equals(this.status, launcher.status) &&
        Objects.equals(this.details, launcher.details) &&
        Objects.equals(this.launcherConfig, launcher.launcherConfig) &&
        Objects.equals(this.imageUrl, launcher.imageUrl) &&
        Objects.equals(this.flights, launcher.flights) &&
        Objects.equals(this.lastLaunchDate, launcher.lastLaunchDate) &&
        Objects.equals(this.firstLaunchDate, launcher.firstLaunchDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, flightProven, serialNumber, status, details, launcherConfig, imageUrl, flights, lastLaunchDate, firstLaunchDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Launcher {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    flightProven: ").append(toIndentedString(flightProven)).append("\n");
    sb.append("    serialNumber: ").append(toIndentedString(serialNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    details: ").append(toIndentedString(details)).append("\n");
    sb.append("    launcherConfig: ").append(toIndentedString(launcherConfig)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    flights: ").append(toIndentedString(flights)).append("\n");
    sb.append("    lastLaunchDate: ").append(toIndentedString(lastLaunchDate)).append("\n");
    sb.append("    firstLaunchDate: ").append(toIndentedString(firstLaunchDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

