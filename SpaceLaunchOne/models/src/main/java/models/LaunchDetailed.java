/*
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package models;

import com.google.gson.annotations.SerializedName;

import org.threeten.bp.OffsetDateTime;

import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * LaunchDetailed
 */

public class LaunchDetailed {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("flightclub_url")
  private String flightclubUrl = null;

  @SerializedName("r_spacex_api_id")
  private String rSpacexApiId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private LaunchStatus status = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;

  @SerializedName("updates")
  private List<Update> updates = null;

  @SerializedName("net")
  private OffsetDateTime net = null;

  @SerializedName("window_end")
  private OffsetDateTime windowEnd = null;

  @SerializedName("window_start")
  private OffsetDateTime windowStart = null;

  @SerializedName("probability")
  private Integer probability = null;

  @SerializedName("holdreason")
  private String holdreason = null;

  @SerializedName("failreason")
  private String failreason = null;

  @SerializedName("hashtag")
  private String hashtag = null;

  @SerializedName("launch_service_provider")
  private AgencySerializerDetailedCommon launchServiceProvider = null;

  @SerializedName("rocket")
  private RocketDetailed rocket = null;

  @SerializedName("mission")
  private Mission mission = null;

  @SerializedName("pad")
  private Pad pad = null;

  @SerializedName("infoURLs")
  private List<InfoURL> infoURLs = null;

  @SerializedName("vidURLs")
  private List<VidURL> vidURLs = null;

  @SerializedName("webcast_live")
  private Boolean webcastLive = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("infographic")
  private String infographic = null;

  @SerializedName("program")
  private List<Program> program = null;

  @SerializedName("orbital_launch_attempt_count")
  private Integer orbitalLaunchAttemptCount = null;

  @SerializedName("location_launch_attempt_count")
  private Integer locationLaunchAttemptCount = null;

  @SerializedName("pad_launch_attempt_count")
  private Integer padLaunchAttemptCount = null;

  @SerializedName("agency_launch_attempt_count")
  private Integer agencyLaunchAttemptCount = null;

  @SerializedName("orbital_launch_attempt_count_year")
  private Integer orbitalLaunchAttemptCountYear = null;

  @SerializedName("location_launch_attempt_count_year")
  private Integer locationLaunchAttemptCountYear = null;

  @SerializedName("pad_launch_attempt_count_year")
  private Integer padLaunchAttemptCountYear = null;

  @SerializedName("agency_launch_attempt_count_year")
  private Integer agencyLaunchAttemptCountYear = null;

  @SerializedName("mission_patches")
  private List<MissionPatch> missionPatches = null;

  @SerializedName("notifications_enabled")
  private Boolean notificationsEnabled = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public LaunchDetailed slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

   /**
   * Get flightclubUrl
   * @return flightclubUrl
  **/
  @ApiModelProperty(value = "")
  public String getFlightclubUrl() {
    return flightclubUrl;
  }

   /**
   * Get rSpacexApiId
   * @return rSpacexApiId
  **/
  @ApiModelProperty(value = "")
  public String getRSpacexApiId() {
    return rSpacexApiId;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public LaunchDetailed status(LaunchStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public LaunchStatus getStatus() {
    return status;
  }

  public void setStatus(LaunchStatus status) {
    this.status = status;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

   /**
   * Get updates
   * @return updates
  **/
  @ApiModelProperty(value = "")
  public List<Update> getUpdates() {
    return updates;
  }

   /**
   * Get net
   * @return net
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getNet() {
    return net;
  }

   /**
   * Get windowEnd
   * @return windowEnd
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getWindowEnd() {
    return windowEnd;
  }

   /**
   * Get windowStart
   * @return windowStart
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getWindowStart() {
    return windowStart;
  }

   /**
   * Get probability
   * @return probability
  **/
  @ApiModelProperty(value = "")
  public Integer getProbability() {
    return probability;
  }

   /**
   * Get holdreason
   * @return holdreason
  **/
  @ApiModelProperty(value = "")
  public String getHoldreason() {
    return holdreason;
  }

   /**
   * Get failreason
   * @return failreason
  **/
  @ApiModelProperty(value = "")
  public String getFailreason() {
    return failreason;
  }

   /**
   * Get hashtag
   * @return hashtag
  **/
  @ApiModelProperty(value = "")
  public String getHashtag() {
    return hashtag;
  }

  public LaunchDetailed launchServiceProvider(AgencySerializerDetailedCommon launchServiceProvider) {
    this.launchServiceProvider = launchServiceProvider;
    return this;
  }

   /**
   * Get launchServiceProvider
   * @return launchServiceProvider
  **/
  @ApiModelProperty(value = "")
  public AgencySerializerDetailedCommon getLaunchServiceProvider() {
    return launchServiceProvider;
  }

  public void setLaunchServiceProvider(AgencySerializerDetailedCommon launchServiceProvider) {
    this.launchServiceProvider = launchServiceProvider;
  }

  public LaunchDetailed rocket(RocketDetailed rocket) {
    this.rocket = rocket;
    return this;
  }

   /**
   * Get rocket
   * @return rocket
  **/
  @ApiModelProperty(value = "")
  public RocketDetailed getRocket() {
    return rocket;
  }

  public void setRocket(RocketDetailed rocket) {
    this.rocket = rocket;
  }

  public LaunchDetailed mission(Mission mission) {
    this.mission = mission;
    return this;
  }

   /**
   * Get mission
   * @return mission
  **/
  @ApiModelProperty(value = "")
  public Mission getMission() {
    return mission;
  }

  public void setMission(Mission mission) {
    this.mission = mission;
  }

  public LaunchDetailed pad(Pad pad) {
    this.pad = pad;
    return this;
  }

   /**
   * Get pad
   * @return pad
  **/
  @ApiModelProperty(value = "")
  public Pad getPad() {
    return pad;
  }

  public void setPad(Pad pad) {
    this.pad = pad;
  }

   /**
   * Get infoURLs
   * @return infoURLs
  **/
  @ApiModelProperty(value = "")
  public List<InfoURL> getInfoURLs() {
    return infoURLs;
  }

   /**
   * Get vidURLs
   * @return vidURLs
  **/
  @ApiModelProperty(value = "")
  public List<VidURL> getVidURLs() {
    return vidURLs;
  }

   /**
   * Get webcastLive
   * @return webcastLive
  **/
  @ApiModelProperty(value = "")
  public Boolean isWebcastLive() {
    return webcastLive;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(value = "")
  public String getImage() {
    return image;
  }

   /**
   * Get infographic
   * @return infographic
  **/
  @ApiModelProperty(value = "")
  public String getInfographic() {
    return infographic;
  }

   /**
   * Get program
   * @return program
  **/
  @ApiModelProperty(value = "")
  public List<Program> getProgram() {
    return program;
  }

   /**
   * Get orbitalLaunchAttemptCount
   * @return orbitalLaunchAttemptCount
  **/
  @ApiModelProperty(value = "")
  public Integer getOrbitalLaunchAttemptCount() {
    return orbitalLaunchAttemptCount;
  }

   /**
   * Get locationLaunchAttemptCount
   * @return locationLaunchAttemptCount
  **/
  @ApiModelProperty(value = "")
  public Integer getLocationLaunchAttemptCount() {
    return locationLaunchAttemptCount;
  }

   /**
   * Get padLaunchAttemptCount
   * @return padLaunchAttemptCount
  **/
  @ApiModelProperty(value = "")
  public Integer getPadLaunchAttemptCount() {
    return padLaunchAttemptCount;
  }

   /**
   * Get agencyLaunchAttemptCount
   * @return agencyLaunchAttemptCount
  **/
  @ApiModelProperty(value = "")
  public Integer getAgencyLaunchAttemptCount() {
    return agencyLaunchAttemptCount;
  }

   /**
   * Get orbitalLaunchAttemptCountYear
   * @return orbitalLaunchAttemptCountYear
  **/
  @ApiModelProperty(value = "")
  public Integer getOrbitalLaunchAttemptCountYear() {
    return orbitalLaunchAttemptCountYear;
  }

   /**
   * Get locationLaunchAttemptCountYear
   * @return locationLaunchAttemptCountYear
  **/
  @ApiModelProperty(value = "")
  public Integer getLocationLaunchAttemptCountYear() {
    return locationLaunchAttemptCountYear;
  }

   /**
   * Get padLaunchAttemptCountYear
   * @return padLaunchAttemptCountYear
  **/
  @ApiModelProperty(value = "")
  public Integer getPadLaunchAttemptCountYear() {
    return padLaunchAttemptCountYear;
  }

   /**
   * Get agencyLaunchAttemptCountYear
   * @return agencyLaunchAttemptCountYear
  **/
  @ApiModelProperty(value = "")
  public Integer getAgencyLaunchAttemptCountYear() {
    return agencyLaunchAttemptCountYear;
  }

   /**
   * Get missionPatches
   * @return missionPatches
  **/
  @ApiModelProperty(value = "")
  public List<MissionPatch> getMissionPatches() {
    return missionPatches;
  }

  public LaunchDetailed notificationsEnabled(Boolean notificationsEnabled) {
    this.notificationsEnabled = notificationsEnabled;
    return this;
  }

   /**
   * Get notificationsEnabled
   * @return notificationsEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isNotificationsEnabled() {
    return notificationsEnabled;
  }

  public void setNotificationsEnabled(Boolean notificationsEnabled) {
    this.notificationsEnabled = notificationsEnabled;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LaunchDetailed launchDetailed = (LaunchDetailed) o;
    return Objects.equals(this.id, launchDetailed.id) &&
        Objects.equals(this.url, launchDetailed.url) &&
        Objects.equals(this.slug, launchDetailed.slug) &&
        Objects.equals(this.flightclubUrl, launchDetailed.flightclubUrl) &&
        Objects.equals(this.rSpacexApiId, launchDetailed.rSpacexApiId) &&
        Objects.equals(this.name, launchDetailed.name) &&
        Objects.equals(this.status, launchDetailed.status) &&
        Objects.equals(this.lastUpdated, launchDetailed.lastUpdated) &&
        Objects.equals(this.updates, launchDetailed.updates) &&
        Objects.equals(this.net, launchDetailed.net) &&
        Objects.equals(this.windowEnd, launchDetailed.windowEnd) &&
        Objects.equals(this.windowStart, launchDetailed.windowStart) &&
        Objects.equals(this.probability, launchDetailed.probability) &&
        Objects.equals(this.holdreason, launchDetailed.holdreason) &&
        Objects.equals(this.failreason, launchDetailed.failreason) &&
        Objects.equals(this.hashtag, launchDetailed.hashtag) &&
        Objects.equals(this.launchServiceProvider, launchDetailed.launchServiceProvider) &&
        Objects.equals(this.rocket, launchDetailed.rocket) &&
        Objects.equals(this.mission, launchDetailed.mission) &&
        Objects.equals(this.pad, launchDetailed.pad) &&
        Objects.equals(this.infoURLs, launchDetailed.infoURLs) &&
        Objects.equals(this.vidURLs, launchDetailed.vidURLs) &&
        Objects.equals(this.webcastLive, launchDetailed.webcastLive) &&
        Objects.equals(this.image, launchDetailed.image) &&
        Objects.equals(this.infographic, launchDetailed.infographic) &&
        Objects.equals(this.program, launchDetailed.program) &&
        Objects.equals(this.orbitalLaunchAttemptCount, launchDetailed.orbitalLaunchAttemptCount) &&
        Objects.equals(this.locationLaunchAttemptCount, launchDetailed.locationLaunchAttemptCount) &&
        Objects.equals(this.padLaunchAttemptCount, launchDetailed.padLaunchAttemptCount) &&
        Objects.equals(this.agencyLaunchAttemptCount, launchDetailed.agencyLaunchAttemptCount) &&
        Objects.equals(this.orbitalLaunchAttemptCountYear, launchDetailed.orbitalLaunchAttemptCountYear) &&
        Objects.equals(this.locationLaunchAttemptCountYear, launchDetailed.locationLaunchAttemptCountYear) &&
        Objects.equals(this.padLaunchAttemptCountYear, launchDetailed.padLaunchAttemptCountYear) &&
        Objects.equals(this.agencyLaunchAttemptCountYear, launchDetailed.agencyLaunchAttemptCountYear) &&
        Objects.equals(this.missionPatches, launchDetailed.missionPatches) &&
        Objects.equals(this.notificationsEnabled, launchDetailed.notificationsEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, slug, flightclubUrl, rSpacexApiId, name, status, lastUpdated, updates, net, windowEnd, windowStart, probability, holdreason, failreason, hashtag, launchServiceProvider, rocket, mission, pad, infoURLs, vidURLs, webcastLive, image, infographic, program, orbitalLaunchAttemptCount, locationLaunchAttemptCount, padLaunchAttemptCount, agencyLaunchAttemptCount, orbitalLaunchAttemptCountYear, locationLaunchAttemptCountYear, padLaunchAttemptCountYear, agencyLaunchAttemptCountYear, missionPatches, notificationsEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LaunchDetailed {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    flightclubUrl: ").append(toIndentedString(flightclubUrl)).append("\n");
    sb.append("    rSpacexApiId: ").append(toIndentedString(rSpacexApiId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    updates: ").append(toIndentedString(updates)).append("\n");
    sb.append("    net: ").append(toIndentedString(net)).append("\n");
    sb.append("    windowEnd: ").append(toIndentedString(windowEnd)).append("\n");
    sb.append("    windowStart: ").append(toIndentedString(windowStart)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    holdreason: ").append(toIndentedString(holdreason)).append("\n");
    sb.append("    failreason: ").append(toIndentedString(failreason)).append("\n");
    sb.append("    hashtag: ").append(toIndentedString(hashtag)).append("\n");
    sb.append("    launchServiceProvider: ").append(toIndentedString(launchServiceProvider)).append("\n");
    sb.append("    rocket: ").append(toIndentedString(rocket)).append("\n");
    sb.append("    mission: ").append(toIndentedString(mission)).append("\n");
    sb.append("    pad: ").append(toIndentedString(pad)).append("\n");
    sb.append("    infoURLs: ").append(toIndentedString(infoURLs)).append("\n");
    sb.append("    vidURLs: ").append(toIndentedString(vidURLs)).append("\n");
    sb.append("    webcastLive: ").append(toIndentedString(webcastLive)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    infographic: ").append(toIndentedString(infographic)).append("\n");
    sb.append("    program: ").append(toIndentedString(program)).append("\n");
    sb.append("    orbitalLaunchAttemptCount: ").append(toIndentedString(orbitalLaunchAttemptCount)).append("\n");
    sb.append("    locationLaunchAttemptCount: ").append(toIndentedString(locationLaunchAttemptCount)).append("\n");
    sb.append("    padLaunchAttemptCount: ").append(toIndentedString(padLaunchAttemptCount)).append("\n");
    sb.append("    agencyLaunchAttemptCount: ").append(toIndentedString(agencyLaunchAttemptCount)).append("\n");
    sb.append("    orbitalLaunchAttemptCountYear: ").append(toIndentedString(orbitalLaunchAttemptCountYear)).append("\n");
    sb.append("    locationLaunchAttemptCountYear: ").append(toIndentedString(locationLaunchAttemptCountYear)).append("\n");
    sb.append("    padLaunchAttemptCountYear: ").append(toIndentedString(padLaunchAttemptCountYear)).append("\n");
    sb.append("    agencyLaunchAttemptCountYear: ").append(toIndentedString(agencyLaunchAttemptCountYear)).append("\n");
    sb.append("    missionPatches: ").append(toIndentedString(missionPatches)).append("\n");
    sb.append("    notificationsEnabled: ").append(toIndentedString(notificationsEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

