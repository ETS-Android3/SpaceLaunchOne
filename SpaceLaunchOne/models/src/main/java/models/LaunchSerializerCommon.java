/*
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package models;

import com.google.gson.annotations.SerializedName;

import org.threeten.bp.OffsetDateTime;

import java.util.List;
import java.util.Objects;
import java.util.UUID;

import io.swagger.annotations.ApiModelProperty;

/**
 * LaunchSerializerCommon
 */

public class LaunchSerializerCommon {
  @SerializedName("id")
  private UUID id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("slug")
  private String slug = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private LaunchStatus status = null;

  @SerializedName("last_updated")
  private OffsetDateTime lastUpdated = null;

  @SerializedName("net")
  private OffsetDateTime net = null;

  @SerializedName("window_end")
  private OffsetDateTime windowEnd = null;

  @SerializedName("window_start")
  private OffsetDateTime windowStart = null;

  @SerializedName("probability")
  private Integer probability = null;

  @SerializedName("holdreason")
  private String holdreason = null;

  @SerializedName("failreason")
  private String failreason = null;

  @SerializedName("hashtag")
  private String hashtag = null;

  @SerializedName("launch_service_provider")
  private AgencySerializerMini launchServiceProvider = null;

  @SerializedName("rocket")
  private RocketSerializerCommon rocket = null;

  @SerializedName("mission")
  private Mission mission = null;

  @SerializedName("pad")
  private Pad pad = null;

  @SerializedName("infoURLs")
  private String infoURLs = null;

  @SerializedName("vidURLs")
  private String vidURLs = null;

  @SerializedName("webcast_live")
  private Boolean webcastLive = null;

  @SerializedName("image")
  private String image = null;

  @SerializedName("infographic")
  private String infographic = null;

  @SerializedName("program")
  private List<Program> program = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public UUID getId() {
    return id;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public LaunchSerializerCommon slug(String slug) {
    this.slug = slug;
    return this;
  }

   /**
   * Get slug
   * @return slug
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSlug() {
    return slug;
  }

  public void setSlug(String slug) {
    this.slug = slug;
  }

  public LaunchSerializerCommon name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public LaunchSerializerCommon status(LaunchStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public LaunchStatus getStatus() {
    return status;
  }

  public void setStatus(LaunchStatus status) {
    this.status = status;
  }

   /**
   * Get lastUpdated
   * @return lastUpdated
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getLastUpdated() {
    return lastUpdated;
  }

  public LaunchSerializerCommon net(OffsetDateTime net) {
    this.net = net;
    return this;
  }

   /**
   * Get net
   * @return net
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getNet() {
    return net;
  }

  public void setNet(OffsetDateTime net) {
    this.net = net;
  }

  public LaunchSerializerCommon windowEnd(OffsetDateTime windowEnd) {
    this.windowEnd = windowEnd;
    return this;
  }

   /**
   * Get windowEnd
   * @return windowEnd
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getWindowEnd() {
    return windowEnd;
  }

  public void setWindowEnd(OffsetDateTime windowEnd) {
    this.windowEnd = windowEnd;
  }

  public LaunchSerializerCommon windowStart(OffsetDateTime windowStart) {
    this.windowStart = windowStart;
    return this;
  }

   /**
   * Get windowStart
   * @return windowStart
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getWindowStart() {
    return windowStart;
  }

  public void setWindowStart(OffsetDateTime windowStart) {
    this.windowStart = windowStart;
  }

  public LaunchSerializerCommon probability(Integer probability) {
    this.probability = probability;
    return this;
  }

   /**
   * Get probability
   * minimum: -2147483648
   * maximum: 2147483647
   * @return probability
  **/
  @ApiModelProperty(value = "")
  public Integer getProbability() {
    return probability;
  }

  public void setProbability(Integer probability) {
    this.probability = probability;
  }

  public LaunchSerializerCommon holdreason(String holdreason) {
    this.holdreason = holdreason;
    return this;
  }

   /**
   * Get holdreason
   * @return holdreason
  **/
  @ApiModelProperty(value = "")
  public String getHoldreason() {
    return holdreason;
  }

  public void setHoldreason(String holdreason) {
    this.holdreason = holdreason;
  }

  public LaunchSerializerCommon failreason(String failreason) {
    this.failreason = failreason;
    return this;
  }

   /**
   * Get failreason
   * @return failreason
  **/
  @ApiModelProperty(value = "")
  public String getFailreason() {
    return failreason;
  }

  public void setFailreason(String failreason) {
    this.failreason = failreason;
  }

  public LaunchSerializerCommon hashtag(String hashtag) {
    this.hashtag = hashtag;
    return this;
  }

   /**
   * Get hashtag
   * @return hashtag
  **/
  @ApiModelProperty(value = "")
  public String getHashtag() {
    return hashtag;
  }

  public void setHashtag(String hashtag) {
    this.hashtag = hashtag;
  }

  public LaunchSerializerCommon launchServiceProvider(AgencySerializerMini launchServiceProvider) {
    this.launchServiceProvider = launchServiceProvider;
    return this;
  }

   /**
   * Get launchServiceProvider
   * @return launchServiceProvider
  **/
  @ApiModelProperty(value = "")
  public AgencySerializerMini getLaunchServiceProvider() {
    return launchServiceProvider;
  }

  public void setLaunchServiceProvider(AgencySerializerMini launchServiceProvider) {
    this.launchServiceProvider = launchServiceProvider;
  }

  public LaunchSerializerCommon rocket(RocketSerializerCommon rocket) {
    this.rocket = rocket;
    return this;
  }

   /**
   * Get rocket
   * @return rocket
  **/
  @ApiModelProperty(value = "")
  public RocketSerializerCommon getRocket() {
    return rocket;
  }

  public void setRocket(RocketSerializerCommon rocket) {
    this.rocket = rocket;
  }

  public LaunchSerializerCommon mission(Mission mission) {
    this.mission = mission;
    return this;
  }

   /**
   * Get mission
   * @return mission
  **/
  @ApiModelProperty(value = "")
  public Mission getMission() {
    return mission;
  }

  public void setMission(Mission mission) {
    this.mission = mission;
  }

  public LaunchSerializerCommon pad(Pad pad) {
    this.pad = pad;
    return this;
  }

   /**
   * Get pad
   * @return pad
  **/
  @ApiModelProperty(value = "")
  public Pad getPad() {
    return pad;
  }

  public void setPad(Pad pad) {
    this.pad = pad;
  }

   /**
   * Get infoURLs
   * @return infoURLs
  **/
  @ApiModelProperty(value = "")
  public String getInfoURLs() {
    return infoURLs;
  }

   /**
   * Get vidURLs
   * @return vidURLs
  **/
  @ApiModelProperty(value = "")
  public String getVidURLs() {
    return vidURLs;
  }

  public LaunchSerializerCommon webcastLive(Boolean webcastLive) {
    this.webcastLive = webcastLive;
    return this;
  }

   /**
   * Get webcastLive
   * @return webcastLive
  **/
  @ApiModelProperty(value = "")
  public Boolean isWebcastLive() {
    return webcastLive;
  }

  public void setWebcastLive(Boolean webcastLive) {
    this.webcastLive = webcastLive;
  }

   /**
   * Get image
   * @return image
  **/
  @ApiModelProperty(value = "")
  public String getImage() {
    return image;
  }

   /**
   * Get infographic
   * @return infographic
  **/
  @ApiModelProperty(value = "")
  public String getInfographic() {
    return infographic;
  }

   /**
   * Get program
   * @return program
  **/
  @ApiModelProperty(value = "")
  public List<Program> getProgram() {
    return program;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    LaunchSerializerCommon launchSerializerCommon = (LaunchSerializerCommon) o;
    return Objects.equals(this.id, launchSerializerCommon.id) &&
        Objects.equals(this.url, launchSerializerCommon.url) &&
        Objects.equals(this.slug, launchSerializerCommon.slug) &&
        Objects.equals(this.name, launchSerializerCommon.name) &&
        Objects.equals(this.status, launchSerializerCommon.status) &&
        Objects.equals(this.lastUpdated, launchSerializerCommon.lastUpdated) &&
        Objects.equals(this.net, launchSerializerCommon.net) &&
        Objects.equals(this.windowEnd, launchSerializerCommon.windowEnd) &&
        Objects.equals(this.windowStart, launchSerializerCommon.windowStart) &&
        Objects.equals(this.probability, launchSerializerCommon.probability) &&
        Objects.equals(this.holdreason, launchSerializerCommon.holdreason) &&
        Objects.equals(this.failreason, launchSerializerCommon.failreason) &&
        Objects.equals(this.hashtag, launchSerializerCommon.hashtag) &&
        Objects.equals(this.launchServiceProvider, launchSerializerCommon.launchServiceProvider) &&
        Objects.equals(this.rocket, launchSerializerCommon.rocket) &&
        Objects.equals(this.mission, launchSerializerCommon.mission) &&
        Objects.equals(this.pad, launchSerializerCommon.pad) &&
        Objects.equals(this.infoURLs, launchSerializerCommon.infoURLs) &&
        Objects.equals(this.vidURLs, launchSerializerCommon.vidURLs) &&
        Objects.equals(this.webcastLive, launchSerializerCommon.webcastLive) &&
        Objects.equals(this.image, launchSerializerCommon.image) &&
        Objects.equals(this.infographic, launchSerializerCommon.infographic) &&
        Objects.equals(this.program, launchSerializerCommon.program);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, slug, name, status, lastUpdated, net, windowEnd, windowStart, probability, holdreason, failreason, hashtag, launchServiceProvider, rocket, mission, pad, infoURLs, vidURLs, webcastLive, image, infographic, program);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class LaunchSerializerCommon {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    slug: ").append(toIndentedString(slug)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    lastUpdated: ").append(toIndentedString(lastUpdated)).append("\n");
    sb.append("    net: ").append(toIndentedString(net)).append("\n");
    sb.append("    windowEnd: ").append(toIndentedString(windowEnd)).append("\n");
    sb.append("    windowStart: ").append(toIndentedString(windowStart)).append("\n");
    sb.append("    probability: ").append(toIndentedString(probability)).append("\n");
    sb.append("    holdreason: ").append(toIndentedString(holdreason)).append("\n");
    sb.append("    failreason: ").append(toIndentedString(failreason)).append("\n");
    sb.append("    hashtag: ").append(toIndentedString(hashtag)).append("\n");
    sb.append("    launchServiceProvider: ").append(toIndentedString(launchServiceProvider)).append("\n");
    sb.append("    rocket: ").append(toIndentedString(rocket)).append("\n");
    sb.append("    mission: ").append(toIndentedString(mission)).append("\n");
    sb.append("    pad: ").append(toIndentedString(pad)).append("\n");
    sb.append("    infoURLs: ").append(toIndentedString(infoURLs)).append("\n");
    sb.append("    vidURLs: ").append(toIndentedString(vidURLs)).append("\n");
    sb.append("    webcastLive: ").append(toIndentedString(webcastLive)).append("\n");
    sb.append("    image: ").append(toIndentedString(image)).append("\n");
    sb.append("    infographic: ").append(toIndentedString(infographic)).append("\n");
    sb.append("    program: ").append(toIndentedString(program)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

