/*
 * Launch Library
 * The Launch Library API is a product by The Space Devs with an up-to-date database of Spaceflight events.   While this API is free to use it is subject to rate limiting for non-authenticated requests.  Please use https://lldev.thespacedevs.com for development testing - this endpoint has stale data but is not subject to any rate limits.  If you are interested in a higher rate limit please consider supporting the project on Patreon for access to an API Key.
 *
 * OpenAPI spec version: 2.2.0
 * Contact: support@thespacedevs.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package models;

import com.google.gson.annotations.SerializedName;

import java.util.Objects;

import io.swagger.annotations.ApiModelProperty;

/**
 * Astronaut
 */

public class Astronaut {
  @SerializedName("id")
  private Integer id = null;

  @SerializedName("url")
  private String url = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("status")
  private AstronautStatus status = null;

  @SerializedName("agency")
  private AgencySerializerMini agency = null;

  @SerializedName("profile_image")
  private String profileImage = null;

  @SerializedName("profile_image_thumbnail")
  private String profileImageThumbnail = null;

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

   /**
   * Get url
   * @return url
  **/
  @ApiModelProperty(value = "")
  public String getUrl() {
    return url;
  }

  public Astronaut name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public Astronaut status(AstronautStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public AstronautStatus getStatus() {
    return status;
  }

  public void setStatus(AstronautStatus status) {
    this.status = status;
  }

  public Astronaut agency(AgencySerializerMini agency) {
    this.agency = agency;
    return this;
  }

   /**
   * Get agency
   * @return agency
  **/
  @ApiModelProperty(value = "")
  public AgencySerializerMini getAgency() {
    return agency;
  }

  public void setAgency(AgencySerializerMini agency) {
    this.agency = agency;
  }

   /**
   * Get profileImage
   * @return profileImage
  **/
  @ApiModelProperty(value = "")
  public String getProfileImage() {
    return profileImage;
  }

   /**
   * Get profileImageThumbnail
   * @return profileImageThumbnail
  **/
  @ApiModelProperty(value = "")
  public String getProfileImageThumbnail() {
    return profileImageThumbnail;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Astronaut astronaut = (Astronaut) o;
    return Objects.equals(this.id, astronaut.id) &&
        Objects.equals(this.url, astronaut.url) &&
        Objects.equals(this.name, astronaut.name) &&
        Objects.equals(this.status, astronaut.status) &&
        Objects.equals(this.agency, astronaut.agency) &&
        Objects.equals(this.profileImage, astronaut.profileImage) &&
        Objects.equals(this.profileImageThumbnail, astronaut.profileImageThumbnail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, url, name, status, agency, profileImage, profileImageThumbnail);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Astronaut {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    agency: ").append(toIndentedString(agency)).append("\n");
    sb.append("    profileImage: ").append(toIndentedString(profileImage)).append("\n");
    sb.append("    profileImageThumbnail: ").append(toIndentedString(profileImageThumbnail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

